{"version":3,"file":"static/js/491.2c660548.chunk.js","mappings":"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","sources":["Pages/Search/Search.js","components/Navbar/Navbar.js","components/Pagenation/Pagenation.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Navbar from '../../components/Navbar/Navbar';\r\n// import CircularProgressBar from '../../components/circularProgressBar/circularProgressBar';\r\nimport PaginationControls from '../../components/Pagenation/Pagenation';\r\nimport './search.css';\r\nimport formatDate from '../../components/formatDate/formatDate';\r\n<formatDate/>\r\nconst SearchPage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const location = useLocation();\r\n  const query = new URLSearchParams(location.search).get('query') || '';\r\n\r\n  useEffect(() => {\r\n    if (query) {\r\n      const fetchMovies = async () => {\r\n        try {\r\n          const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=f43ec82a5f24fe6190891894b7436c7a&query=${encodeURIComponent(query)}`);\r\n          setMovies(response.data.results);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchMovies();\r\n    }\r\n  }, [query]);\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>Error: {error}</div>;\r\n\r\n  return (\r\n\r\n    <div className=\"search-page\">\r\n        <Navbar/>\r\n     \r\n      <h1 className='header'>Search Results for \"{query}\"</h1>\r\n      <div className=\"movie-list\">\r\n        {movies.length > 0 ? (\r\n          movies.map(movie => (\r\n            <div key={movie.id} className=\"movie-card\">\r\n              <img \r\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`} \r\n                alt={movie.title} \r\n                className=\"movie-poster\"\r\n              />\r\n               <div className=\"movie_rating \">\r\n                  {/* <CircularProgressBar percentage={Math.round(movie.vote_average * 10)} /> */}\r\n                </div>\r\n              <h2>{movie.title}</h2>\r\n              <p>{formatDate(movie.release_date)}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div>No movies found</div>\r\n        )}\r\n      </div>\r\n      <PaginationControls\r\n    \r\n      />\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import { Link } from 'react-router-dom';\r\nimport { FaRegHeart, FaHeart } from 'react-icons/fa';\r\nimport { useSelector } from 'react-redux';\r\nimport './Navbar.css';\r\nimport LanguageContext from \"../../context/LanguageContext\";\r\n\r\nimport { useContext } from \"react\";\r\n\r\n\r\nconst NavBar = () => {\r\n  const watchlist = useSelector((state) => state.watchlist);\r\n  \r\n  const {language, setLanguage} = useContext(LanguageContext)\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg\" >\r\n      <Link className=\"navbar-brand\" to=\"/\">Movie App</Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/watchlist\">\r\n              <FaHeart color={watchlist.length > 0 ? 'red' : 'gray'} /> Watchlist\r\n            </Link>\r\n          </li>\r\n        \r\n       \r\n        </ul>\r\n        <span style={{cursor: \"pointer\"}} className=\"p-2 mx-3\" onClick={()=>setLanguage(language === \"en\" ? \"ar\" : \"en\")}>{language}</span>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","\r\nimport React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\n\r\nconst PaginationControls = ({ currentPage, totalPages, onPageChange }) => {\r\n  const maxVisiblePages = 5; \r\n\r\n  const handlePageChange = (page) => {\r\n    if (page > 0 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination-container  container\">\r\n      <Pagination>\r\n        <Pagination.Prev\r\n          onClick={() => handlePageChange(currentPage - 1)}\r\n          disabled={currentPage === 1}\r\n        />\r\n        {[...Array(maxVisiblePages).keys()].map((_, index) => {\r\n          const pageNumber = index + 1;\r\n          return (\r\n            pageNumber <= totalPages && (\r\n              <Pagination.Item\r\n                key={pageNumber}\r\n                active={pageNumber === currentPage}\r\n                onClick={() => handlePageChange(pageNumber)}\r\n              >\r\n                {pageNumber}\r\n              </Pagination.Item>\r\n            )\r\n          );\r\n        })}\r\n        {totalPages > maxVisiblePages && (\r\n          <>\r\n            <Pagination.Ellipsis />\r\n            <Pagination.Item\r\n              onClick={() => handlePageChange(totalPages)}\r\n            >\r\n              {totalPages}\r\n            </Pagination.Item>\r\n          </>\r\n        )}\r\n        <Pagination.Next\r\n          onClick={() => handlePageChange(currentPage + 1)}\r\n          disabled={currentPage === totalPages}\r\n        />\r\n      </Pagination>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginationControls;\r\n"],"names":["SearchPage","movies","setMovies","useState","loading","setLoading","error","setError","location","useLocation","query","URLSearchParams","search","get","useEffect","fetchMovies","async","response","axios","encodeURIComponent","data","results","message","_jsx","children","_jsxs","className","Navbar","length","map","movie","src","poster_path","alt","title","formatDate","release_date","id","PaginationControls","NavBar","watchlist","useSelector","state","language","setLanguage","useContext","LanguageContext","Link","to","type","FaHeart","color","style","cursor","onClick","_ref","currentPage","totalPages","onPageChange","handlePageChange","page","Pagination","Prev","disabled","Array","keys","_","index","pageNumber","Item","active","_Fragment","Ellipsis","Next"],"sourceRoot":""}